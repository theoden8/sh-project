#!/bin/bash

fname=$1; shift
[ -z "$fname" ] && {
    fname="lattice.json"
}

env python3 -c "
from homomorphism_solver import *
from lattice_utils import *


def print_comparison(lattice, gfile, hfile):
    print(gfile)
    print(hfile)
    print('YES' if lattice.path_finder.has_path(gfile, hfile) else 'NO')
    phi = is_homomorphic(lattice.cache.load(gfile), lattice.cache.load(hfile))
    print('YES' if phi is not None else 'NO')


if __name__ == '__main__':
    lattice = Lattice.load('$fname')
    representatives = lattice.path_finder.representatives
    representatives.sort(key=lambda nd: get_graph_size(nd) * 100000 + get_graph_id(nd))
    for i in range(1, len(representatives)):
        g = representatives[i]
        for h in representatives[:i]:
            print_comparison(lattice, g, h)
            print_comparison(lattice, h, g)
" | {
    while IFS= read -r gfile; do
        read hfile
        read result
        read sh_res

        echo "$gfile $hfile $sh_res $result"
        [ "$result" != "${sh_res}" ] && {
            >&2 echo "error: different results"
                exit 1
        }
    done
}
